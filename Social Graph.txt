Social Graph

For this task, we were asked to Interrogate the Github API to build visualisation of data available. For my graph, I decided to measure how Humble or Vain a Github user was depending on the number of followers they had compared to the number of people they were following. I call it the Vanity Meter. Usage of it is pretty straightforward; you go to the localhost of your computer when running NPM, which is the Package Manager for Javascript. NPM was basically how I hosted my Javascript to the internet. You have to set a port for this, so I used Port 80, or my localhost. 

In order for the actual interrogation of the Github API to occur in my program, I designed a Python Program which is called upon my the Javascript. This was done using a process called spawn, in which you “spawn” a process from a different script. Then, to use it I had to call pythonProcess = spawn(‘python’, “./importRequests.py”,….) Which called upon my python script to run it.

Inside the Python Program, I had to learn how to use requests from websites. To do this, I had to use requests.get, and enter the link I wanted to get data from. I also enter the Github Username through the search bar, which is entered to the end of the link in the .get, which will link it to a particular Github depending on the username entered. Then, I converted it all into json, and had to extract the Followers and Following count for the particular Github username entered.

Once I had the values I needed from the Github account, I pass them into something I found called matplotlib.pyplot, which is a Mathematical Plotting import for Python. I plug in my follower and following count to a Pie Chart, and can define all the labels and colours of my pie chart very easily. I then had to use a library called mpld3, which used matplotlib, and allows you to post your graph to a HTML site.

Once this came together, I had 3 scripts; my Python, my Javascript, and my HTML. Before starting this project, I had absolutely no experience in any of these languages mentioned above, so I feel like I triumphed in being able to use the three of them simultaneously, and all together in order to build my Github Interrogation. The HTML was simple enough, it just has a nice background, I gave a little description of what my Meter did on the webpage, and I had a submission bar and button. Once a GitHub username was entered into the Submission Bar, this will be sent to my Javascript, which plugs the username into my python, which will then do the son conversion, and the Chart Plotting. After this, a nice Pie Chart of Vain vs Humble will appear on screen, on which you can easily see how vain or humble a GitHub user is.

I feel particularly proud of this assignment, as I really threw myself into the deep end by using 3 new languages. The Javascript particularly stands out in my mind, as I found it extremely interesting to learn how to use websites, and how to actually build one myself, and how to host it.  